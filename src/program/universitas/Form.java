package program.universitas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Form extends javax.swing.JFrame {
    
    private DefaultTableModel model;
    
    public Form() {
        initComponents();
        
        comboboxJurusan.setSelectedItem(null);
        
        //membuat TableModel
        model = new DefaultTableModel();
        //memasukan TableModel ke tabelMahasiswa
        tabelMahasiswa.setModel(model);
        
        model.addColumn("NIM");
        model.addColumn("Nama");
        model.addColumn("Tanggal Lahir");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Jurusan");
        model.addColumn("Alamat");
        
        //panggil loadData();
        loadData();
    }
    
    public void loadData() {
        //menghapus seluruh data
        model.getDataVector().removeAllElements();
        //alert data telah dihapus
        model.fireTableDataChanged();
        
        try {
            Connection c = KoneksiDatabase.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "select * from mahasiswa";
            ResultSet r = s.executeQuery(sql);
            
            while(r.next()) {
                //proses penelusuran baris
                Object[] o = new Object[6];
                o[0] = r.getString("nim");
                o[1] = r.getString("nama");
                o[2] = r.getDate("tanggal_lahir");
                o[3] = r.getString("jenis_kelamin");
                o[4] = r.getString("jurusan");
                o[5] = r.getString("alamat");
                
                model.addRow(o);
            }
            r.close();
            s.close();
        } catch(SQLException e) {
            System.out.println("error, tidak dapat menampilkan data...");
        }
    }
    
    public void cariData() {
        //menghapus seluruh data
        model.getDataVector().removeAllElements();
        //alert data telah dihapus
        model.fireTableDataChanged();
        
        try {
            Connection c = KoneksiDatabase.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "select * from mahasiswa where nama like '%" +inputCari.getText()+ "%'";
            ResultSet r = s.executeQuery(sql);
            
            while(r.next()) {
                //proses penelusuran baris
                Object[] o = new Object[6];
                o[0] = r.getString("nim");
                o[1] = r.getString("nama");
                o[2] = r.getDate("tanggal_lahir");
                o[3] = r.getString("jenis_kelamin");
                o[4] = r.getString("jurusan");
                o[5] = r.getString("alamat");
                
                model.addRow(o);
            }
            r.close();
            s.close();
        } catch(SQLException e) {
            System.out.println("error, tidak dapat menampilkan data...");
        }
    }
    
    public void refresh() {
        inputNIM.setEnabled(true);
        buttonTambah.setEnabled(true);
        
        inputNIM.setText(null);
        inputNama.setText(null);
        dateTanggalLahir.setDate(null);
        radiobuttonJenisKelamin.clearSelection();
        comboboxJurusan.setSelectedItem(null);
        inputAlamat.setText(null);
        inputCari.setText(null);
        
        loadData();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        radiobuttonJenisKelamin = new javax.swing.ButtonGroup();
        jLocaleChooser1 = new com.toedter.components.JLocaleChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        inputNIM = new javax.swing.JTextField();
        inputNama = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputAlamat = new javax.swing.JTextArea();
        buttonTambah = new javax.swing.JButton();
        buttonUbah = new javax.swing.JButton();
        buttonHapus = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelMahasiswa = new javax.swing.JTable();
        buttonRefresh = new javax.swing.JButton();
        dateTanggalLahir = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        radiobuttonLaki = new javax.swing.JRadioButton();
        radiobuttonPerempuan = new javax.swing.JRadioButton();
        comboboxJurusan = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        inputCari = new javax.swing.JTextField();
        buttonCari = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        buttonExit = new javax.swing.JButton();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("NIM");

        jLabel2.setText("Nama");

        jLabel3.setText("Tanggal Lahir");

        jLabel4.setText("Jurusan");

        jLabel5.setText("Alamat");

        inputNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNamaActionPerformed(evt);
            }
        });

        inputAlamat.setColumns(20);
        inputAlamat.setRows(5);
        jScrollPane1.setViewportView(inputAlamat);

        buttonTambah.setText("Tambah");
        buttonTambah.setPreferredSize(new java.awt.Dimension(100, 25));
        buttonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahActionPerformed(evt);
            }
        });

        buttonUbah.setText("Ubah");
        buttonUbah.setPreferredSize(new java.awt.Dimension(100, 25));
        buttonUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUbahActionPerformed(evt);
            }
        });

        buttonHapus.setText("Hapus");
        buttonHapus.setPreferredSize(new java.awt.Dimension(100, 25));
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        tabelMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelMahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMahasiswaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelMahasiswa);

        buttonRefresh.setText("Refresh");
        buttonRefresh.setPreferredSize(new java.awt.Dimension(100, 25));
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        dateTanggalLahir.setDateFormatString("d MMM, yyyy");

        jLabel6.setText("Jenis Kelamin");

        radiobuttonJenisKelamin.add(radiobuttonLaki);
        radiobuttonLaki.setText("Laki-Laki");

        radiobuttonJenisKelamin.add(radiobuttonPerempuan);
        radiobuttonPerempuan.setText("Perempuan");

        comboboxJurusan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Akuntansi", "DKV", "Hukum", "Manajemen", "Sistem Informasi", "Teknik Informatika" }));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("=== PROGRAM INPUT DATA MAHASISWA ===");

        inputCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCariActionPerformed(evt);
            }
        });
        inputCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputCariKeyPressed(evt);
            }
        });

        buttonCari.setText("Cari");
        buttonCari.setPreferredSize(new java.awt.Dimension(100, 25));
        buttonCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariActionPerformed(evt);
            }
        });

        jLabel8.setText("Cari Mahasiswa");

        buttonExit.setText("Exit");
        buttonExit.setPreferredSize(new java.awt.Dimension(0, 0));
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel2)
                                    .addGap(81, 81, 81)
                                    .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel3)
                                    .addGap(44, 44, 44)
                                    .addComponent(dateTanggalLahir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel6)
                                    .addGap(45, 45, 45)
                                    .addComponent(radiobuttonLaki)
                                    .addGap(18, 18, 18)
                                    .addComponent(radiobuttonPerempuan))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel4)
                                    .addGap(70, 70, 70)
                                    .addComponent(comboboxJurusan, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel5)
                                    .addGap(75, 75, 75)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(118, 118, 118)
                                    .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonUbah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel8)
                                    .addGap(34, 34, 34)
                                    .addComponent(inputCari, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonCari, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel1)
                                    .addGap(89, 89, 89)
                                    .addComponent(inputNIM, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(inputNIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(dateTanggalLahir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel6))
                    .addComponent(radiobuttonLaki)
                    .addComponent(radiobuttonPerempuan))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4))
                    .addComponent(comboboxJurusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonUbah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(inputCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahActionPerformed
        // TODO add your handling code here:
        String nim = inputNIM.getText();
        String nama = inputNama.getText();
        java.util.Date tanggalLahir = (java.util.Date) dateTanggalLahir.getDate();
        
        String jenisKelamin;
        if(radiobuttonLaki.isSelected()) {
            jenisKelamin = radiobuttonLaki.getText();
        }
        else {
            jenisKelamin = radiobuttonPerempuan.getText();
        }
        
        String jurusan = (String) comboboxJurusan.getSelectedItem();
        String alamat = inputAlamat.getText();
        
        try {
            Connection c  = KoneksiDatabase.getKoneksi();
            
            String sql = "insert into mahasiswa values (?,?,?,?,?,?)";
            
            PreparedStatement p = c.prepareStatement(sql);
            
            p.setString(1, nim);
            p.setString(2, nama);
            p.setDate(3, new java.sql.Date(tanggalLahir.getTime()));
            p.setString(4, jenisKelamin);
            p.setString(5, jurusan);
            p.setString(6, alamat);
            
            p.executeUpdate();
            p.close();
        } catch(SQLException e) {
            System.out.println("error, gagal menambahkan data...");
        } finally {
            loadData();
            refresh();
        }
    }//GEN-LAST:event_buttonTambahActionPerformed

    private void buttonUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUbahActionPerformed
        // TODO add your handling code here:
        int i = tabelMahasiswa.getSelectedRow();
        if(i == -1) {
            //tidak ada baris yang terseleksi
            return;
        }
        
        //ambil nilai nim yang terseleksi
        String nim = (String) model.getValueAt(i, 0);
        
        String nama = inputNama.getText();
        java.util.Date tanggalLahir = (java.util.Date) dateTanggalLahir.getDate();
        
        String jenisKelamin;
        if(radiobuttonLaki.isSelected()) {
            jenisKelamin = radiobuttonLaki.getText();
        }
        else {
            jenisKelamin = radiobuttonPerempuan.getText();
        }
        
        String jurusan = (String) comboboxJurusan.getSelectedItem();
        String alamat = inputAlamat.getText();
        
        try {
            Connection c = KoneksiDatabase.getKoneksi();
            
            String sql = "update mahasiswa set nama = ?, tanggal_lahir = ?, jenis_kelamin = ?, jurusan = ?, alamat = ? where nim = ?";
            
            PreparedStatement p = c.prepareStatement(sql);
            
            p.setString(1, nama);
            p.setDate(2, new java.sql.Date(tanggalLahir.getTime()));
            p.setString(3, jenisKelamin);
            p.setString(4, jurusan);
            p.setString(5, alamat);
            p.setString(6, nim);
            
            p.executeUpdate();
            p.close();
        } catch(SQLException e) {
            System.out.println("error, gagal mengupdate data...");
        } finally {
            loadData();
            refresh();
        }
    }//GEN-LAST:event_buttonUbahActionPerformed

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        // TODO add your handling code here:
        int i = tabelMahasiswa.getSelectedRow();
        if(i == -1) {
            //tidak ada baris yang terseleksi
            return;
        }
        
        //ambil nilai dari nim
        String nim  = (String) model.getValueAt(i, 0);
        
        try {
            Connection c = KoneksiDatabase.getKoneksi();
            
            String sql = "delete from mahasiswa where nim = ?";
            
            PreparedStatement p = c.prepareStatement(sql);
            
            p.setString(1, nim);
            
            p.executeUpdate();
            p.close();
        } catch(SQLException e) {
            System.err.println("error, data gagal dihapus...");
        } finally {
            loadData();
            refresh();
        }
    }//GEN-LAST:event_buttonHapusActionPerformed

    private void tabelMahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMahasiswaMouseClicked
        // TODO add your handling code here:
        inputNIM.setEnabled(false);
        buttonTambah.setEnabled(false);
        
        int i = tabelMahasiswa.getSelectedRow();
        if(i == -1) {
            //tidak ada data yang terseleksi
            return;
        }
        
        String nim = (String) model.getValueAt(i, 0);
        inputNIM.setText(nim);
        
        String nama = (String) model.getValueAt(i, 1);
        inputNama.setText(nama);
        
        java.util.Date tanggalLahir = (java.util.Date) model.getValueAt(i, 2);
        dateTanggalLahir.setDate(tanggalLahir);
        
        String jenisKelamin;
        if("Laki-Laki".equals(model.getValueAt(i, 3))) {
            radiobuttonLaki.setSelected(true);
        }
        else {
            radiobuttonPerempuan.setSelected(true);
        }
        
        String jurusan = (String) model.getValueAt(i, 4);
        comboboxJurusan.setSelectedItem(jurusan);
        
        String alamat = (String) model.getValueAt(i, 5);
        inputAlamat.setText(alamat);
    }//GEN-LAST:event_tabelMahasiswaMouseClicked

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void buttonCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCariActionPerformed
        // TODO add your handling code here:
        String cari = inputCari.getText();
        if("".equals(cari)) {
            JOptionPane.showMessageDialog(this, "mohon inputkan taka kunci terlebih dahulu...");
            loadData();
        }
        else {
            cariData();
        }
    }//GEN-LAST:event_buttonCariActionPerformed

    private void inputCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputCariKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_inputCariKeyPressed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_buttonExitActionPerformed

    private void inputCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCariActionPerformed
        // TODO add your handling code here:
        String cari = inputCari.getText();
        if("".equals(cari)) {
            JOptionPane.showMessageDialog(this, "mohon inputkan taka kunci terlebih dahulu...");
            loadData();
        }
        else {
            cariData();
        }
    }//GEN-LAST:event_inputCariActionPerformed

    private void inputNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNamaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCari;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JButton buttonTambah;
    private javax.swing.JButton buttonUbah;
    private javax.swing.JComboBox comboboxJurusan;
    private com.toedter.calendar.JDateChooser dateTanggalLahir;
    private javax.swing.JTextArea inputAlamat;
    private javax.swing.JTextField inputCari;
    private javax.swing.JTextField inputNIM;
    private javax.swing.JTextField inputNama;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private com.toedter.components.JLocaleChooser jLocaleChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.ButtonGroup radiobuttonJenisKelamin;
    private javax.swing.JRadioButton radiobuttonLaki;
    private javax.swing.JRadioButton radiobuttonPerempuan;
    private javax.swing.JTable tabelMahasiswa;
    // End of variables declaration//GEN-END:variables
}
